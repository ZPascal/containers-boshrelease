---
name: docker

templates:
  bin/docker:  bin/docker
  envrc:       envrc

  etc/files.ttar:                 etc/files.ttar
  etc/running/docker-compose.yml: etc/running/docker-compose.yml

  bin/post-start: bin/post-start
  bin/prep:       bin/prep

packages:
  - docker

properties:
  bind:
    description: |
      By default, the `docker` daemon is only bound to the local UNIX
      domain socket (`unix:///var/vcap/sys/run/docker/docker.sock`).
      However, there are circumstances where you may want or need to
      interact with Docker from outside the BOSH VM, over a TCP link.

      In those cases, you can set this to a TCP port number, and Docker
      will also bind on that port, all interfaces, in addition to the
      standard UNIX domain socket.

      Be very careful about enabling this; Docker has zero authentication
      and will gladly perform any action requested of it by anyone who
      can connect to the (public) TCP port.  Make sure you are behind a
      firewall, at the very least.

  recipe:
    description: |
      The full docker-compose recipe to run, via `docker-compose up -d'.

  files:
    description: |
      A map, keyed by relative file path, of additional files to create
      and use in bind mounts of the docker-compose recipe.

      If you've made life decisions that have led you down the path of
      go-patch operator files, you'll be pleased to know that we are
      particularly charitable.  You can specify this as an array of
      maps, which will each be merged in-line during template render.
      This is easier to do with Spruce and tools like it, but sometimes
      you're stuck with the decisions of the past.

  on_duplicate_files:
    default: raise-error
    description: |
      If using the array form of the `files` directive, you may end up
      (quite easily, actually) with duplicated, conflicting file names.
      If this happens, the default behavior of this release is to raise
      an error and halt deployment. (`on_duplicate_files: raise-error`)

      If you would rather recklessly merge in operator files, and override
      the earlier file contents with the later ones, set this to its
      other valid value: 'override'.

  prep:
    description: |
      Sometimes, we don't pick our Docker images -- they pick us.
      Oftentimes that means that we must conform to their view of the
      world regarding things like file ownership, permissions, etc.

      This spec lets you write the entirety of an executable script
      (in whatever scripting language you want) to execute outside of
      the containers (on the BOSH VM) before attempting to spin up
      the docker-compose recipe.  Use this to chown and chmod to your
      hearts content.

      This script really ought to be fully idempotent, as it will be
      run **every** time the job is restarted, i.e. on stemcell update.
    default: |
      #!/bin/sh
      exit 0

  insecure-registries:
    default: []
    description: |
      A list of registry endpoints that are either not TLS-protected,
      or are protected by TLS certificates that are unverifiable by the
      Docker daemon (during a `docker pull`) -- either because they are
      self-signed certificates, or because the CA that signed them is
      ultimately not trusted by the BOSH VM.

      If your registry resides on a non-standard port, you will need
      to include the port (colon-separated) when you list it.

# vim:ft=yaml
